using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/// <summary>
/// В рамках реализации полноценного Paint уровней иерархии должно быть больше(банальный пример - разделение по измерениям), однако в условия ТЗ данной задачи
/// число фигур небольшое, а также действий с ними со стороны пользователя всего 3, поэтому иерархия реализована под данную задачу. Яркий пример - квадрат и прямоугольник.
/// В общем случае, их следовало бы оставить на одном уровне иерархии, т.к. различаются формулы для рассчета периметра. Однако в задаче не требуются подсчеты конкретных значений площади или периметра,
/// а значит в случае наследования прямоугольника от квадрата мы сохраним значение стороны квадрата, добавив еще одно поле для другой стороны. На практике, формула теперь уже площади
/// квадрата была бы некорректной для прямоугольника и такое наследование не было бы хорошим решением. Даже в данном случае это уже не совсем хорошо, т.к. нейминг поля, соответствующего стороне
/// квадрата можно было бы оставить как Side, но тогда непонятно будет что за Side у прямоугольника. Поэтому сторону квадрата назвал Height, что уменьшит число строк кода в данной работе, но
/// не сделает хорошо в реальном проекте.
/// Пару слов о иерархии в рабочем случае: после класса Figure следует провести разделение на 1D, 2D и 3D фигуры, и далее уже проводить грамотное наследование, которое работает
/// корректно для подсчетов в том числе.
/// </summary>


namespace EPAM_task_2._1._2
{

    class Program
    {
        static void Main(string[] args)
        {
            Paint.Editor();
        }
    }
}
